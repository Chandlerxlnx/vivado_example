#*****************************************************************************************
# Vivado (TM) v2024.2 (64-bit)
#
# crt_proj_u50_hbm.tcl: Tcl script for re-creating project 'proj_u50_hbm'
#
# Generated by Vivado on Wed Dec 18 21:33:00 MST 2024
# IP Build 5239520 on Sun Nov 10 16:12:51 MST 2024
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (crt_proj_u50_hbm.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/srcs/tb/hbm_tb.v"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "proj_u50_hbm"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "crt_proj_u50_hbm.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/proj_u50_hbm"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project -force ${_xil_proj_name_} ./${_xil_proj_name_} -part xcu50-fsvh2104-2-e

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Reconstruct message rules
# None

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xcu50-fsvh2104-2-e" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
#set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
#set_property -name "simulator_language" -value "Mixed" -objects $obj
#set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "target_simulator" -value "Questa" -objects $obj
#set_property -name "use_inline_hdl_ip" -value "1" -objects $obj
#set_property -name "webtalk.modelsim_export_sim" -value "2" -objects $obj
#set_property -name "webtalk.questa_export_sim" -value "3" -objects $obj
#set_property -name "webtalk.questa_launch_sim" -value "6" -objects $obj
#set_property -name "webtalk.riviera_export_sim" -value "2" -objects $obj
#set_property -name "webtalk.vcs_export_sim" -value "2" -objects $obj
#set_property -name "webtalk.xsim_export_sim" -value "2" -objects $obj
#set_property -name "webtalk.xsim_launch_sim" -value "5" -objects $obj
#set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/srcs/tb/hbm_tb.v" ]\
]
set imported_files ""
foreach f $files {
  lappend imported_files [import_files -fileset sources_1 $f]
}

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "dataflow_viewer_settings" -value "min_width=16" -objects $obj
set_property -name "top" -value "hbm_tb" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Empty (no sources present)

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_part" -value "xcu50-fsvh2104-2-e" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "questa.simulate.vsim.more_options" -value "+notimingcheck" -objects $obj
set_property -name "sim_wrapper_top" -value "1" -objects $obj
set_property -name "top" -value "hbm_tb" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:hbm\
  xilinx.com:ip:clk_wiz\
  xilinx.com:ip:util_ds_buf\
  xilinx.com:ip:axi_traffic_gen\
  xilinx.com:ip:smartconnect\
  xilinx.com:ip:proc_sys_reset\
  xilinx.com:ip:jtag_axi\
  xilinx.com:ip:axi_apb_bridge\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv:*]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set CLK_IN_D_0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 CLK_IN_D_0 ]


  # Create ports
  set reset_0 [ create_bd_port -dir I -type rst reset_0 ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_HIGH} \
 ] $reset_0

  # Create instance: hbm_0, and set properties
  set hbm_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:hbm hbm_0 ]
  set_property -dict [list \
    CONFIG.USER_AXI_CLK_FREQ {250} \
    CONFIG.USER_EXAMPLE_TG {SYNTHESIZABLE} \
    CONFIG.USER_MC0_BURST_RW_REFRESH_HOLDOFF {true} \
    CONFIG.USER_MC0_REF_TEMP_COMP {false} \
    CONFIG.USER_MC_ENABLE_02 {FALSE} \
    CONFIG.USER_MC_ENABLE_03 {FALSE} \
    CONFIG.USER_SAXI_04 {false} \
    CONFIG.USER_SAXI_05 {false} \
    CONFIG.USER_SAXI_06 {false} \
    CONFIG.USER_SAXI_07 {false} \
    CONFIG.USER_SAXI_09 {false} \
    CONFIG.USER_SAXI_11 {false} \
    CONFIG.USER_SAXI_13 {false} \
    CONFIG.USER_SAXI_15 {false} \
  ] $hbm_0


  # Create instance: clk_wiz, and set properties
  set clk_wiz [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz clk_wiz ]
  set_property -dict [list \
    CONFIG.CLKOUT1_JITTER {111.970} \
    CONFIG.CLKOUT1_PHASE_ERROR {84.520} \
    CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {100.0} \
    CONFIG.CLKOUT2_JITTER {94.797} \
    CONFIG.CLKOUT2_PHASE_ERROR {84.520} \
    CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {250.000} \
    CONFIG.CLKOUT2_USED {true} \
    CONFIG.MMCM_CLKFBOUT_MULT_F {12.500} \
    CONFIG.MMCM_CLKOUT0_DIVIDE_F {12.500} \
    CONFIG.MMCM_CLKOUT1_DIVIDE {5} \
    CONFIG.NUM_OUT_CLKS {2} \
  ] $clk_wiz


  # Create instance: util_ds_buf_0, and set properties
  set util_ds_buf_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf util_ds_buf_0 ]

  # Create instance: axi_traffic_gen_1, and set properties
  set axi_traffic_gen_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_traffic_gen axi_traffic_gen_1 ]
  set_property -dict [list \
    CONFIG.ATG_OPTIONS {High Level Traffic} \
    CONFIG.C_ATG_MODE_L2 {Advanced} \
    CONFIG.C_ATG_REPEAT_TYPE {One_Shot} \
    CONFIG.C_ATG_STATIC_HLTP_INCR {true} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH {33} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH_HLT {33} \
    CONFIG.C_M_AXI_ARUSER_WIDTH {0} \
    CONFIG.C_M_AXI_AWUSER_WIDTH {0} \
    CONFIG.C_M_AXI_DATA_WIDTH {256} \
    CONFIG.C_M_AXI_THREAD_ID_WIDTH {6} \
    CONFIG.DATA_TRANS_GAP {Random} \
    CONFIG.MASTER_AXI_WIDTH {256} \
    CONFIG.MASTER_HIGH_ADDRESS_EXT {0x00000000} \
    CONFIG.TRAFFIC_PROFILE {Data} \
  ] $axi_traffic_gen_1


  # Create instance: smartconnect_0, and set properties
  set smartconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect smartconnect_0 ]
  set_property CONFIG.NUM_SI {1} $smartconnect_0


  # Create instance: smartconnect_1, and set properties
  set smartconnect_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect smartconnect_1 ]
  set_property CONFIG.NUM_SI {1} $smartconnect_1


  # Create instance: axi_traffic_gen_0, and set properties
  set axi_traffic_gen_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_traffic_gen axi_traffic_gen_0 ]
  set_property -dict [list \
    CONFIG.ATG_CLK_FREQ_MHZ {250} \
    CONFIG.ATG_OPTIONS {High Level Traffic} \
    CONFIG.C_ATG_MODE_L2 {Advanced} \
    CONFIG.C_ATG_REPEAT_TYPE {One_Shot} \
    CONFIG.C_ATG_STATIC_HLTP_INCR {true} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH {33} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH_HLT {33} \
    CONFIG.C_M_AXI_ARUSER_WIDTH {0} \
    CONFIG.C_M_AXI_AWUSER_WIDTH {0} \
    CONFIG.C_M_AXI_DATA_WIDTH {256} \
    CONFIG.C_M_AXI_THREAD_ID_WIDTH {6} \
    CONFIG.DATA_SIZE_AVG {4} \
    CONFIG.DATA_TRANS_GAP {Random} \
    CONFIG.MASTER_AXI_WIDTH {256} \
    CONFIG.MASTER_HIGH_ADDRESS_EXT {0x00000000} \
    CONFIG.TRAFFIC_PROFILE {Data} \
  ] $axi_traffic_gen_0


  # Create instance: axi_traffic_gen_2, and set properties
  set axi_traffic_gen_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_traffic_gen axi_traffic_gen_2 ]
  set_property -dict [list \
    CONFIG.ATG_CLK_FREQ_MHZ {250} \
    CONFIG.ATG_OPTIONS {High Level Traffic} \
    CONFIG.C_ATG_MODE_L2 {Advanced} \
    CONFIG.C_ATG_REPEAT_TYPE {One_Shot} \
    CONFIG.C_ATG_STATIC_HLTP_INCR {true} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH {33} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH_HLT {33} \
    CONFIG.C_M_AXI_ARUSER_WIDTH {0} \
    CONFIG.C_M_AXI_AWUSER_WIDTH {0} \
    CONFIG.C_M_AXI_DATA_WIDTH {256} \
    CONFIG.C_M_AXI_THREAD_ID_WIDTH {6} \
    CONFIG.DATA_SIZE_AVG {4} \
    CONFIG.DATA_TRANS_GAP {Random} \
    CONFIG.MASTER_AXI_WIDTH {256} \
    CONFIG.MASTER_HIGH_ADDRESS_EXT {0x00000000} \
    CONFIG.TRAFFIC_PROFILE {Data} \
  ] $axi_traffic_gen_2


  # Create instance: axi_traffic_gen_3, and set properties
  set axi_traffic_gen_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_traffic_gen axi_traffic_gen_3 ]
  set_property -dict [list \
    CONFIG.ATG_CLK_FREQ_MHZ {250} \
    CONFIG.ATG_OPTIONS {High Level Traffic} \
    CONFIG.C_ATG_MODE_L2 {Advanced} \
    CONFIG.C_ATG_REPEAT_TYPE {One_Shot} \
    CONFIG.C_ATG_STATIC_HLTP_INCR {true} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH {33} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH_HLT {33} \
    CONFIG.C_M_AXI_ARUSER_WIDTH {0} \
    CONFIG.C_M_AXI_AWUSER_WIDTH {0} \
    CONFIG.C_M_AXI_DATA_WIDTH {256} \
    CONFIG.C_M_AXI_THREAD_ID_WIDTH {6} \
    CONFIG.DATA_SIZE_AVG {4} \
    CONFIG.DATA_TRANS_GAP {Random} \
    CONFIG.MASTER_AXI_WIDTH {256} \
    CONFIG.MASTER_HIGH_ADDRESS_EXT {0x00000000} \
    CONFIG.TRAFFIC_PROFILE {Data} \
  ] $axi_traffic_gen_3


  # Create instance: axi_traffic_gen_4, and set properties
  set axi_traffic_gen_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_traffic_gen axi_traffic_gen_4 ]
  set_property -dict [list \
    CONFIG.ATG_CLK_FREQ_MHZ {250} \
    CONFIG.ATG_OPTIONS {High Level Traffic} \
    CONFIG.C_ATG_MODE_L2 {Advanced} \
    CONFIG.C_ATG_REPEAT_TYPE {One_Shot} \
    CONFIG.C_ATG_STATIC_HLTP_INCR {true} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH {33} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH_HLT {33} \
    CONFIG.C_M_AXI_ARUSER_WIDTH {0} \
    CONFIG.C_M_AXI_AWUSER_WIDTH {0} \
    CONFIG.C_M_AXI_DATA_WIDTH {256} \
    CONFIG.C_M_AXI_THREAD_ID_WIDTH {6} \
    CONFIG.DATA_SIZE_AVG {4} \
    CONFIG.DATA_TRANS_GAP {Random} \
    CONFIG.MASTER_AXI_WIDTH {256} \
    CONFIG.MASTER_HIGH_ADDRESS_EXT {0x00000000} \
    CONFIG.TRAFFIC_PROFILE {Data} \
  ] $axi_traffic_gen_4


  # Create instance: axi_traffic_gen_5, and set properties
  set axi_traffic_gen_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_traffic_gen axi_traffic_gen_5 ]
  set_property -dict [list \
    CONFIG.ATG_CLK_FREQ_MHZ {250} \
    CONFIG.ATG_OPTIONS {High Level Traffic} \
    CONFIG.C_ATG_MODE_L2 {Advanced} \
    CONFIG.C_ATG_REPEAT_TYPE {One_Shot} \
    CONFIG.C_ATG_STATIC_HLTP_INCR {true} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH {33} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH_HLT {33} \
    CONFIG.C_M_AXI_ARUSER_WIDTH {0} \
    CONFIG.C_M_AXI_AWUSER_WIDTH {0} \
    CONFIG.C_M_AXI_DATA_WIDTH {256} \
    CONFIG.C_M_AXI_THREAD_ID_WIDTH {6} \
    CONFIG.DATA_SIZE_AVG {4} \
    CONFIG.DATA_TRANS_GAP {Random} \
    CONFIG.MASTER_AXI_WIDTH {256} \
    CONFIG.MASTER_HIGH_ADDRESS_EXT {0x00000000} \
    CONFIG.TRAFFIC_PROFILE {Data} \
  ] $axi_traffic_gen_5


  # Create instance: axi_traffic_gen_6, and set properties
  set axi_traffic_gen_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_traffic_gen axi_traffic_gen_6 ]
  set_property -dict [list \
    CONFIG.ATG_CLK_FREQ_MHZ {250} \
    CONFIG.ATG_OPTIONS {High Level Traffic} \
    CONFIG.C_ATG_MODE_L2 {Advanced} \
    CONFIG.C_ATG_REPEAT_TYPE {One_Shot} \
    CONFIG.C_ATG_STATIC_HLTP_INCR {true} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH {33} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH_HLT {33} \
    CONFIG.C_M_AXI_ARUSER_WIDTH {0} \
    CONFIG.C_M_AXI_AWUSER_WIDTH {0} \
    CONFIG.C_M_AXI_DATA_WIDTH {256} \
    CONFIG.C_M_AXI_THREAD_ID_WIDTH {6} \
    CONFIG.DATA_SIZE_AVG {4} \
    CONFIG.DATA_TRANS_GAP {Random} \
    CONFIG.MASTER_AXI_WIDTH {256} \
    CONFIG.MASTER_HIGH_ADDRESS_EXT {0x00000000} \
    CONFIG.TRAFFIC_PROFILE {Data} \
  ] $axi_traffic_gen_6


  # Create instance: axi_traffic_gen_7, and set properties
  set axi_traffic_gen_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_traffic_gen axi_traffic_gen_7 ]
  set_property -dict [list \
    CONFIG.ATG_CLK_FREQ_MHZ {250} \
    CONFIG.ATG_OPTIONS {High Level Traffic} \
    CONFIG.C_ATG_MODE_L2 {Advanced} \
    CONFIG.C_ATG_REPEAT_TYPE {One_Shot} \
    CONFIG.C_ATG_STATIC_HLTP_INCR {true} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH {33} \
    CONFIG.C_EXTENDED_ADDRESS_WIDTH_HLT {33} \
    CONFIG.C_M_AXI_ARUSER_WIDTH {0} \
    CONFIG.C_M_AXI_AWUSER_WIDTH {0} \
    CONFIG.C_M_AXI_DATA_WIDTH {256} \
    CONFIG.C_M_AXI_THREAD_ID_WIDTH {6} \
    CONFIG.DATA_SIZE_AVG {4} \
    CONFIG.DATA_TRANS_GAP {Random} \
    CONFIG.MASTER_AXI_WIDTH {256} \
    CONFIG.MASTER_HIGH_ADDRESS_EXT {0x00000000} \
    CONFIG.TRAFFIC_PROFILE {Data} \
  ] $axi_traffic_gen_7


  # Create instance: smartconnect_2, and set properties
  set smartconnect_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect smartconnect_2 ]
  set_property CONFIG.NUM_SI {1} $smartconnect_2


  # Create instance: smartconnect_3, and set properties
  set smartconnect_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect smartconnect_3 ]
  set_property CONFIG.NUM_SI {1} $smartconnect_3


  # Create instance: smartconnect_4, and set properties
  set smartconnect_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect smartconnect_4 ]
  set_property CONFIG.NUM_SI {1} $smartconnect_4


  # Create instance: smartconnect_5, and set properties
  set smartconnect_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect smartconnect_5 ]
  set_property CONFIG.NUM_SI {1} $smartconnect_5


  # Create instance: smartconnect_6, and set properties
  set smartconnect_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect smartconnect_6 ]
  set_property CONFIG.NUM_SI {1} $smartconnect_6


  # Create instance: smartconnect_7, and set properties
  set smartconnect_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect smartconnect_7 ]
  set_property CONFIG.NUM_SI {1} $smartconnect_7


  # Create instance: rst_clk_wiz_250M, and set properties
  set rst_clk_wiz_250M [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset rst_clk_wiz_250M ]

  # Create instance: jtag_axi_0, and set properties
  set jtag_axi_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:jtag_axi jtag_axi_0 ]
  set_property CONFIG.PROTOCOL {2} $jtag_axi_0


  # Create instance: axi_apb_bridge_0, and set properties
  set axi_apb_bridge_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_apb_bridge axi_apb_bridge_0 ]
  set_property CONFIG.C_APB_NUM_SLAVES {1} $axi_apb_bridge_0


  # Create instance: rst_clk_wiz_100M, and set properties
  set rst_clk_wiz_100M [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset rst_clk_wiz_100M ]

  # Create interface connections
  connect_bd_intf_net -intf_net CLK_IN_D_0_1 [get_bd_intf_ports CLK_IN_D_0] [get_bd_intf_pins util_ds_buf_0/CLK_IN_D]
  connect_bd_intf_net -intf_net axi_apb_bridge_0_APB_M [get_bd_intf_pins axi_apb_bridge_0/APB_M] [get_bd_intf_pins hbm_0/SAPB_0]
  connect_bd_intf_net -intf_net axi_traffic_gen_0_M_AXI [get_bd_intf_pins smartconnect_0/S00_AXI] [get_bd_intf_pins axi_traffic_gen_0/M_AXI]
  connect_bd_intf_net -intf_net axi_traffic_gen_1_M_AXI [get_bd_intf_pins smartconnect_1/S00_AXI] [get_bd_intf_pins axi_traffic_gen_1/M_AXI]
  connect_bd_intf_net -intf_net axi_traffic_gen_2_M_AXI [get_bd_intf_pins smartconnect_2/S00_AXI] [get_bd_intf_pins axi_traffic_gen_2/M_AXI]
  connect_bd_intf_net -intf_net axi_traffic_gen_3_M_AXI [get_bd_intf_pins smartconnect_3/S00_AXI] [get_bd_intf_pins axi_traffic_gen_3/M_AXI]
  connect_bd_intf_net -intf_net axi_traffic_gen_4_M_AXI [get_bd_intf_pins smartconnect_4/S00_AXI] [get_bd_intf_pins axi_traffic_gen_4/M_AXI]
  connect_bd_intf_net -intf_net axi_traffic_gen_5_M_AXI [get_bd_intf_pins smartconnect_5/S00_AXI] [get_bd_intf_pins axi_traffic_gen_5/M_AXI]
  connect_bd_intf_net -intf_net axi_traffic_gen_6_M_AXI [get_bd_intf_pins smartconnect_6/S00_AXI] [get_bd_intf_pins axi_traffic_gen_6/M_AXI]
  connect_bd_intf_net -intf_net axi_traffic_gen_7_M_AXI [get_bd_intf_pins smartconnect_7/S00_AXI] [get_bd_intf_pins axi_traffic_gen_7/M_AXI]
  connect_bd_intf_net -intf_net jtag_axi_0_M_AXI [get_bd_intf_pins jtag_axi_0/M_AXI] [get_bd_intf_pins axi_apb_bridge_0/AXI4_LITE]
  connect_bd_intf_net -intf_net smartconnect_0_M00_AXI [get_bd_intf_pins smartconnect_0/M00_AXI] [get_bd_intf_pins hbm_0/SAXI_00]
  connect_bd_intf_net -intf_net smartconnect_1_M00_AXI [get_bd_intf_pins smartconnect_1/M00_AXI] [get_bd_intf_pins hbm_0/SAXI_01]
  connect_bd_intf_net -intf_net smartconnect_2_M00_AXI [get_bd_intf_pins hbm_0/SAXI_02] [get_bd_intf_pins smartconnect_2/M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_3_M00_AXI [get_bd_intf_pins hbm_0/SAXI_03] [get_bd_intf_pins smartconnect_3/M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_4_M00_AXI [get_bd_intf_pins hbm_0/SAXI_08] [get_bd_intf_pins smartconnect_4/M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_5_M00_AXI [get_bd_intf_pins hbm_0/SAXI_10] [get_bd_intf_pins smartconnect_5/M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_6_M00_AXI [get_bd_intf_pins hbm_0/SAXI_12] [get_bd_intf_pins smartconnect_6/M00_AXI]
  connect_bd_intf_net -intf_net smartconnect_7_M00_AXI [get_bd_intf_pins hbm_0/SAXI_14] [get_bd_intf_pins smartconnect_7/M00_AXI]

  # Create port connections
  connect_bd_net -net Net1  [get_bd_pins rst_clk_wiz_100M/peripheral_aresetn] \
  [get_bd_pins axi_apb_bridge_0/s_axi_aresetn] \
  [get_bd_pins jtag_axi_0/aresetn] \
  [get_bd_pins hbm_0/APB_0_PRESET_N]
  connect_bd_net -net clk_wiz_clk_out1  [get_bd_pins clk_wiz/clk_out2] \
  [get_bd_pins axi_traffic_gen_0/s_axi_aclk] \
  [get_bd_pins smartconnect_0/aclk] \
  [get_bd_pins rst_clk_wiz_250M/slowest_sync_clk] \
  [get_bd_pins axi_traffic_gen_1/s_axi_aclk] \
  [get_bd_pins smartconnect_1/aclk] \
  [get_bd_pins axi_traffic_gen_2/s_axi_aclk] \
  [get_bd_pins smartconnect_2/aclk] \
  [get_bd_pins axi_traffic_gen_3/s_axi_aclk] \
  [get_bd_pins smartconnect_3/aclk] \
  [get_bd_pins axi_traffic_gen_4/s_axi_aclk] \
  [get_bd_pins smartconnect_4/aclk] \
  [get_bd_pins axi_traffic_gen_5/s_axi_aclk] \
  [get_bd_pins smartconnect_5/aclk] \
  [get_bd_pins axi_traffic_gen_6/s_axi_aclk] \
  [get_bd_pins smartconnect_6/aclk] \
  [get_bd_pins axi_traffic_gen_7/s_axi_aclk] \
  [get_bd_pins smartconnect_7/aclk] \
  [get_bd_pins hbm_0/AXI_00_ACLK] \
  [get_bd_pins hbm_0/AXI_01_ACLK] \
  [get_bd_pins hbm_0/AXI_02_ACLK] \
  [get_bd_pins hbm_0/AXI_03_ACLK] \
  [get_bd_pins hbm_0/AXI_08_ACLK] \
  [get_bd_pins hbm_0/AXI_10_ACLK] \
  [get_bd_pins hbm_0/AXI_12_ACLK] \
  [get_bd_pins hbm_0/AXI_14_ACLK]
  connect_bd_net -net clk_wiz_clk_out2  [get_bd_pins clk_wiz/clk_out1] \
  [get_bd_pins hbm_0/HBM_REF_CLK_0] \
  [get_bd_pins hbm_0/APB_0_PCLK] \
  [get_bd_pins axi_apb_bridge_0/s_axi_aclk] \
  [get_bd_pins jtag_axi_0/aclk] \
  [get_bd_pins rst_clk_wiz_100M/slowest_sync_clk]
  connect_bd_net -net clk_wiz_locked  [get_bd_pins clk_wiz/locked] \
  [get_bd_pins rst_clk_wiz_250M/dcm_locked] \
  [get_bd_pins rst_clk_wiz_100M/dcm_locked]
  connect_bd_net -net hbm_0_apb_complete_0  [get_bd_pins hbm_0/apb_complete_0] \
  [get_bd_pins rst_clk_wiz_250M/aux_reset_in]
  connect_bd_net -net reset_0_1  [get_bd_ports reset_0] \
  [get_bd_pins clk_wiz/reset] \
  [get_bd_pins rst_clk_wiz_250M/ext_reset_in] \
  [get_bd_pins rst_clk_wiz_100M/ext_reset_in]
  connect_bd_net -net rst_clk_wiz_100M_peripheral_aresetn  [get_bd_pins rst_clk_wiz_250M/peripheral_aresetn] \
  [get_bd_pins axi_traffic_gen_0/s_axi_aresetn] \
  [get_bd_pins axi_traffic_gen_1/s_axi_aresetn] \
  [get_bd_pins axi_traffic_gen_2/s_axi_aresetn] \
  [get_bd_pins axi_traffic_gen_3/s_axi_aresetn] \
  [get_bd_pins axi_traffic_gen_4/s_axi_aresetn] \
  [get_bd_pins axi_traffic_gen_5/s_axi_aresetn] \
  [get_bd_pins axi_traffic_gen_6/s_axi_aresetn] \
  [get_bd_pins axi_traffic_gen_7/s_axi_aresetn] \
  [get_bd_pins hbm_0/AXI_00_ARESET_N] \
  [get_bd_pins hbm_0/AXI_01_ARESET_N] \
  [get_bd_pins hbm_0/AXI_02_ARESET_N] \
  [get_bd_pins hbm_0/AXI_03_ARESET_N] \
  [get_bd_pins hbm_0/AXI_08_ARESET_N] \
  [get_bd_pins hbm_0/AXI_10_ARESET_N] \
  [get_bd_pins hbm_0/AXI_12_ARESET_N] \
  [get_bd_pins hbm_0/AXI_14_ARESET_N]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT  [get_bd_pins util_ds_buf_0/IBUF_OUT] \
  [get_bd_pins clk_wiz/clk_in1]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_1/Data] [get_bd_addr_segs hbm_0/SAXI_01/HBM_MEM00] -force
  assign_bd_address -offset 0x10000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_1/Data] [get_bd_addr_segs hbm_0/SAXI_01/HBM_MEM01] -force
  assign_bd_address -offset 0x20000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_1/Data] [get_bd_addr_segs hbm_0/SAXI_01/HBM_MEM02] -force
  assign_bd_address -offset 0x30000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_1/Data] [get_bd_addr_segs hbm_0/SAXI_01/HBM_MEM03] -force
  assign_bd_address -offset 0x80000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_1/Data] [get_bd_addr_segs hbm_0/SAXI_01/HBM_MEM08] -force
  assign_bd_address -offset 0x90000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_1/Data] [get_bd_addr_segs hbm_0/SAXI_01/HBM_MEM09] -force
  assign_bd_address -offset 0xA0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_1/Data] [get_bd_addr_segs hbm_0/SAXI_01/HBM_MEM10] -force
  assign_bd_address -offset 0xB0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_1/Data] [get_bd_addr_segs hbm_0/SAXI_01/HBM_MEM11] -force
  assign_bd_address -offset 0xC0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_1/Data] [get_bd_addr_segs hbm_0/SAXI_01/HBM_MEM12] -force
  assign_bd_address -offset 0xD0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_1/Data] [get_bd_addr_segs hbm_0/SAXI_01/HBM_MEM13] -force
  assign_bd_address -offset 0xE0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_1/Data] [get_bd_addr_segs hbm_0/SAXI_01/HBM_MEM14] -force
  assign_bd_address -offset 0xF0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_1/Data] [get_bd_addr_segs hbm_0/SAXI_01/HBM_MEM15] -force
  assign_bd_address -offset 0x00000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_0/Data] [get_bd_addr_segs hbm_0/SAXI_00/HBM_MEM00] -force
  assign_bd_address -offset 0x10000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_0/Data] [get_bd_addr_segs hbm_0/SAXI_00/HBM_MEM01] -force
  assign_bd_address -offset 0x20000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_0/Data] [get_bd_addr_segs hbm_0/SAXI_00/HBM_MEM02] -force
  assign_bd_address -offset 0x30000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_0/Data] [get_bd_addr_segs hbm_0/SAXI_00/HBM_MEM03] -force
  assign_bd_address -offset 0x80000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_0/Data] [get_bd_addr_segs hbm_0/SAXI_00/HBM_MEM08] -force
  assign_bd_address -offset 0x90000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_0/Data] [get_bd_addr_segs hbm_0/SAXI_00/HBM_MEM09] -force
  assign_bd_address -offset 0xA0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_0/Data] [get_bd_addr_segs hbm_0/SAXI_00/HBM_MEM10] -force
  assign_bd_address -offset 0xB0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_0/Data] [get_bd_addr_segs hbm_0/SAXI_00/HBM_MEM11] -force
  assign_bd_address -offset 0xC0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_0/Data] [get_bd_addr_segs hbm_0/SAXI_00/HBM_MEM12] -force
  assign_bd_address -offset 0xD0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_0/Data] [get_bd_addr_segs hbm_0/SAXI_00/HBM_MEM13] -force
  assign_bd_address -offset 0xE0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_0/Data] [get_bd_addr_segs hbm_0/SAXI_00/HBM_MEM14] -force
  assign_bd_address -offset 0xF0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_0/Data] [get_bd_addr_segs hbm_0/SAXI_00/HBM_MEM15] -force
  assign_bd_address -offset 0x00000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_2/Data] [get_bd_addr_segs hbm_0/SAXI_02/HBM_MEM00] -force
  assign_bd_address -offset 0x10000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_2/Data] [get_bd_addr_segs hbm_0/SAXI_02/HBM_MEM01] -force
  assign_bd_address -offset 0x20000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_2/Data] [get_bd_addr_segs hbm_0/SAXI_02/HBM_MEM02] -force
  assign_bd_address -offset 0x30000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_2/Data] [get_bd_addr_segs hbm_0/SAXI_02/HBM_MEM03] -force
  assign_bd_address -offset 0x80000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_2/Data] [get_bd_addr_segs hbm_0/SAXI_02/HBM_MEM08] -force
  assign_bd_address -offset 0x90000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_2/Data] [get_bd_addr_segs hbm_0/SAXI_02/HBM_MEM09] -force
  assign_bd_address -offset 0xA0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_2/Data] [get_bd_addr_segs hbm_0/SAXI_02/HBM_MEM10] -force
  assign_bd_address -offset 0xB0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_2/Data] [get_bd_addr_segs hbm_0/SAXI_02/HBM_MEM11] -force
  assign_bd_address -offset 0xC0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_2/Data] [get_bd_addr_segs hbm_0/SAXI_02/HBM_MEM12] -force
  assign_bd_address -offset 0xD0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_2/Data] [get_bd_addr_segs hbm_0/SAXI_02/HBM_MEM13] -force
  assign_bd_address -offset 0xE0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_2/Data] [get_bd_addr_segs hbm_0/SAXI_02/HBM_MEM14] -force
  assign_bd_address -offset 0xF0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_2/Data] [get_bd_addr_segs hbm_0/SAXI_02/HBM_MEM15] -force
  assign_bd_address -offset 0x00000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_3/Data] [get_bd_addr_segs hbm_0/SAXI_03/HBM_MEM00] -force
  assign_bd_address -offset 0x10000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_3/Data] [get_bd_addr_segs hbm_0/SAXI_03/HBM_MEM01] -force
  assign_bd_address -offset 0x20000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_3/Data] [get_bd_addr_segs hbm_0/SAXI_03/HBM_MEM02] -force
  assign_bd_address -offset 0x30000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_3/Data] [get_bd_addr_segs hbm_0/SAXI_03/HBM_MEM03] -force
  assign_bd_address -offset 0x80000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_3/Data] [get_bd_addr_segs hbm_0/SAXI_03/HBM_MEM08] -force
  assign_bd_address -offset 0x90000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_3/Data] [get_bd_addr_segs hbm_0/SAXI_03/HBM_MEM09] -force
  assign_bd_address -offset 0xA0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_3/Data] [get_bd_addr_segs hbm_0/SAXI_03/HBM_MEM10] -force
  assign_bd_address -offset 0xB0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_3/Data] [get_bd_addr_segs hbm_0/SAXI_03/HBM_MEM11] -force
  assign_bd_address -offset 0xC0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_3/Data] [get_bd_addr_segs hbm_0/SAXI_03/HBM_MEM12] -force
  assign_bd_address -offset 0xD0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_3/Data] [get_bd_addr_segs hbm_0/SAXI_03/HBM_MEM13] -force
  assign_bd_address -offset 0xE0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_3/Data] [get_bd_addr_segs hbm_0/SAXI_03/HBM_MEM14] -force
  assign_bd_address -offset 0xF0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_3/Data] [get_bd_addr_segs hbm_0/SAXI_03/HBM_MEM15] -force
  assign_bd_address -offset 0x00000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_4/Data] [get_bd_addr_segs hbm_0/SAXI_08/HBM_MEM00] -force
  assign_bd_address -offset 0x10000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_4/Data] [get_bd_addr_segs hbm_0/SAXI_08/HBM_MEM01] -force
  assign_bd_address -offset 0x20000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_4/Data] [get_bd_addr_segs hbm_0/SAXI_08/HBM_MEM02] -force
  assign_bd_address -offset 0x30000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_4/Data] [get_bd_addr_segs hbm_0/SAXI_08/HBM_MEM03] -force
  assign_bd_address -offset 0x80000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_4/Data] [get_bd_addr_segs hbm_0/SAXI_08/HBM_MEM08] -force
  assign_bd_address -offset 0x90000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_4/Data] [get_bd_addr_segs hbm_0/SAXI_08/HBM_MEM09] -force
  assign_bd_address -offset 0xA0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_4/Data] [get_bd_addr_segs hbm_0/SAXI_08/HBM_MEM10] -force
  assign_bd_address -offset 0xB0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_4/Data] [get_bd_addr_segs hbm_0/SAXI_08/HBM_MEM11] -force
  assign_bd_address -offset 0xC0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_4/Data] [get_bd_addr_segs hbm_0/SAXI_08/HBM_MEM12] -force
  assign_bd_address -offset 0xD0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_4/Data] [get_bd_addr_segs hbm_0/SAXI_08/HBM_MEM13] -force
  assign_bd_address -offset 0xE0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_4/Data] [get_bd_addr_segs hbm_0/SAXI_08/HBM_MEM14] -force
  assign_bd_address -offset 0xF0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_4/Data] [get_bd_addr_segs hbm_0/SAXI_08/HBM_MEM15] -force
  assign_bd_address -offset 0x00000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_5/Data] [get_bd_addr_segs hbm_0/SAXI_10/HBM_MEM00] -force
  assign_bd_address -offset 0x10000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_5/Data] [get_bd_addr_segs hbm_0/SAXI_10/HBM_MEM01] -force
  assign_bd_address -offset 0x20000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_5/Data] [get_bd_addr_segs hbm_0/SAXI_10/HBM_MEM02] -force
  assign_bd_address -offset 0x30000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_5/Data] [get_bd_addr_segs hbm_0/SAXI_10/HBM_MEM03] -force
  assign_bd_address -offset 0x80000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_5/Data] [get_bd_addr_segs hbm_0/SAXI_10/HBM_MEM08] -force
  assign_bd_address -offset 0x90000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_5/Data] [get_bd_addr_segs hbm_0/SAXI_10/HBM_MEM09] -force
  assign_bd_address -offset 0xA0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_5/Data] [get_bd_addr_segs hbm_0/SAXI_10/HBM_MEM10] -force
  assign_bd_address -offset 0xB0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_5/Data] [get_bd_addr_segs hbm_0/SAXI_10/HBM_MEM11] -force
  assign_bd_address -offset 0xC0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_5/Data] [get_bd_addr_segs hbm_0/SAXI_10/HBM_MEM12] -force
  assign_bd_address -offset 0xD0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_5/Data] [get_bd_addr_segs hbm_0/SAXI_10/HBM_MEM13] -force
  assign_bd_address -offset 0xE0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_5/Data] [get_bd_addr_segs hbm_0/SAXI_10/HBM_MEM14] -force
  assign_bd_address -offset 0xF0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_5/Data] [get_bd_addr_segs hbm_0/SAXI_10/HBM_MEM15] -force
  assign_bd_address -offset 0x00000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_6/Data] [get_bd_addr_segs hbm_0/SAXI_12/HBM_MEM00] -force
  assign_bd_address -offset 0x10000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_6/Data] [get_bd_addr_segs hbm_0/SAXI_12/HBM_MEM01] -force
  assign_bd_address -offset 0x20000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_6/Data] [get_bd_addr_segs hbm_0/SAXI_12/HBM_MEM02] -force
  assign_bd_address -offset 0x30000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_6/Data] [get_bd_addr_segs hbm_0/SAXI_12/HBM_MEM03] -force
  assign_bd_address -offset 0x80000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_6/Data] [get_bd_addr_segs hbm_0/SAXI_12/HBM_MEM08] -force
  assign_bd_address -offset 0x90000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_6/Data] [get_bd_addr_segs hbm_0/SAXI_12/HBM_MEM09] -force
  assign_bd_address -offset 0xA0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_6/Data] [get_bd_addr_segs hbm_0/SAXI_12/HBM_MEM10] -force
  assign_bd_address -offset 0xB0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_6/Data] [get_bd_addr_segs hbm_0/SAXI_12/HBM_MEM11] -force
  assign_bd_address -offset 0xC0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_6/Data] [get_bd_addr_segs hbm_0/SAXI_12/HBM_MEM12] -force
  assign_bd_address -offset 0xD0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_6/Data] [get_bd_addr_segs hbm_0/SAXI_12/HBM_MEM13] -force
  assign_bd_address -offset 0xE0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_6/Data] [get_bd_addr_segs hbm_0/SAXI_12/HBM_MEM14] -force
  assign_bd_address -offset 0xF0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_6/Data] [get_bd_addr_segs hbm_0/SAXI_12/HBM_MEM15] -force
  assign_bd_address -offset 0x00000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_7/Data] [get_bd_addr_segs hbm_0/SAXI_14/HBM_MEM00] -force
  assign_bd_address -offset 0x10000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_7/Data] [get_bd_addr_segs hbm_0/SAXI_14/HBM_MEM01] -force
  assign_bd_address -offset 0x20000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_7/Data] [get_bd_addr_segs hbm_0/SAXI_14/HBM_MEM02] -force
  assign_bd_address -offset 0x30000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_7/Data] [get_bd_addr_segs hbm_0/SAXI_14/HBM_MEM03] -force
  assign_bd_address -offset 0x80000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_7/Data] [get_bd_addr_segs hbm_0/SAXI_14/HBM_MEM08] -force
  assign_bd_address -offset 0x90000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_7/Data] [get_bd_addr_segs hbm_0/SAXI_14/HBM_MEM09] -force
  assign_bd_address -offset 0xA0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_7/Data] [get_bd_addr_segs hbm_0/SAXI_14/HBM_MEM10] -force
  assign_bd_address -offset 0xB0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_7/Data] [get_bd_addr_segs hbm_0/SAXI_14/HBM_MEM11] -force
  assign_bd_address -offset 0xC0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_7/Data] [get_bd_addr_segs hbm_0/SAXI_14/HBM_MEM12] -force
  assign_bd_address -offset 0xD0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_7/Data] [get_bd_addr_segs hbm_0/SAXI_14/HBM_MEM13] -force
  assign_bd_address -offset 0xE0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_7/Data] [get_bd_addr_segs hbm_0/SAXI_14/HBM_MEM14] -force
  assign_bd_address -offset 0xF0000000 -range 0x10000000 -target_address_space [get_bd_addr_spaces axi_traffic_gen_7/Data] [get_bd_addr_segs hbm_0/SAXI_14/HBM_MEM15] -force
  assign_bd_address -offset 0x00000000 -range 0x00400000 -target_address_space [get_bd_addr_spaces jtag_axi_0/Data] [get_bd_addr_segs hbm_0/SAPB_0/Reg] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.252967",
   "Default View_TopLeft":"-1138,-376",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.8.0 2024-04-26 e1825d835c VDI=44 GEI=38 GUI=JA:21.0 TLS
#  -string -flagsOSRD
preplace port CLK_IN_D_0 -pg 1 -lvl 0 -x -50 -y -210 -defaultsOSRD
preplace port port-id_reset_0 -pg 1 -lvl 0 -x -50 -y -340 -defaultsOSRD
preplace inst hbm_0 -pg 1 -lvl 6 -x 1920 -y 740 -defaultsOSRD
preplace inst clk_wiz -pg 1 -lvl 6 -x 1920 -y -280 -defaultsOSRD
preplace inst util_ds_buf_0 -pg 1 -lvl 1 -x 150 -y -210 -defaultsOSRD
preplace inst axi_traffic_gen_1 -pg 1 -lvl 2 -x 420 -y 640 -defaultsOSRD
preplace inst smartconnect_0 -pg 1 -lvl 4 -x 1070 -y 150 -defaultsOSRD
preplace inst smartconnect_1 -pg 1 -lvl 4 -x 1070 -y 290 -defaultsOSRD
preplace inst axi_traffic_gen_0 -pg 1 -lvl 2 -x 420 -y 480 -defaultsOSRD
preplace inst axi_traffic_gen_2 -pg 1 -lvl 3 -x 700 -y 660 -defaultsOSRD
preplace inst axi_traffic_gen_3 -pg 1 -lvl 3 -x 700 -y 800 -defaultsOSRD
preplace inst axi_traffic_gen_4 -pg 1 -lvl 3 -x 700 -y 940 -defaultsOSRD
preplace inst axi_traffic_gen_5 -pg 1 -lvl 3 -x 700 -y 1080 -defaultsOSRD
preplace inst axi_traffic_gen_6 -pg 1 -lvl 3 -x 700 -y 1220 -defaultsOSRD
preplace inst axi_traffic_gen_7 -pg 1 -lvl 3 -x 700 -y 1400 -defaultsOSRD
preplace inst smartconnect_2 -pg 1 -lvl 5 -x 1420 -y 370 -defaultsOSRD
preplace inst smartconnect_3 -pg 1 -lvl 5 -x 1420 -y 510 -defaultsOSRD
preplace inst smartconnect_4 -pg 1 -lvl 5 -x 1420 -y 650 -defaultsOSRD
preplace inst smartconnect_5 -pg 1 -lvl 5 -x 1420 -y 790 -defaultsOSRD
preplace inst smartconnect_6 -pg 1 -lvl 5 -x 1420 -y 930 -defaultsOSRD
preplace inst smartconnect_7 -pg 1 -lvl 5 -x 1420 -y 1070 -defaultsOSRD
preplace inst rst_clk_wiz_250M -pg 1 -lvl 7 -x 2360 -y -280 -defaultsOSRD
preplace inst jtag_axi_0 -pg 1 -lvl 2 -x 420 -y 120 -defaultsOSRD
preplace inst axi_apb_bridge_0 -pg 1 -lvl 4 -x 1070 -y 500 -defaultsOSRD
preplace inst rst_clk_wiz_100M -pg 1 -lvl 5 -x 1420 -y -130 -defaultsOSRD
preplace netloc Net1 1 1 5 290 390 570J 480 870 70 N 70 1610
preplace netloc clk_wiz_clk_out1 1 1 6 290 400 560 500 840 370 1230 270 1710 -190 2140
preplace netloc clk_wiz_clk_out2 1 1 6 290 50 N 50 890 50 1220 50 1680 50 2120
preplace netloc clk_wiz_locked 1 4 3 1250 -230 1590 -200 2130
preplace netloc hbm_0_apb_complete_0 1 6 1 2150 -280n
preplace netloc reset_0_1 1 0 7 NJ -340 NJ -340 N -340 N -340 1230 -340 1630 -360 2150
preplace netloc rst_clk_wiz_100M_peripheral_aresetn 1 1 7 300 560 550 1300 NJ 1300 NJ 1300 1720 1150 NJ 1150 2530
preplace netloc util_ds_buf_0_IBUF_OUT 1 1 5 270 -270 N -270 N -270 N -270 N
preplace netloc CLK_IN_D_0_1 1 0 1 N -210
preplace netloc axi_apb_bridge_0_APB_M 1 4 2 1240J 290 1600
preplace netloc axi_traffic_gen_0_M_AXI 1 2 2 N 470 820
preplace netloc axi_traffic_gen_1_M_AXI 1 2 2 580 490 850
preplace netloc axi_traffic_gen_2_M_AXI 1 3 2 860 380 1250
preplace netloc axi_traffic_gen_3_M_AXI 1 3 2 900 420 1200
preplace netloc axi_traffic_gen_4_M_AXI 1 3 2 910 630 N
preplace netloc axi_traffic_gen_5_M_AXI 1 3 2 920 770 N
preplace netloc axi_traffic_gen_6_M_AXI 1 3 2 930 910 N
preplace netloc axi_traffic_gen_7_M_AXI 1 3 2 940 1050 N
preplace netloc jtag_axi_0_M_AXI 1 2 2 580 460 880J
preplace netloc smartconnect_0_M00_AXI 1 4 2 N 150 1700
preplace netloc smartconnect_1_M00_AXI 1 4 2 1200 280 1630
preplace netloc smartconnect_2_M00_AXI 1 5 1 1590 370n
preplace netloc smartconnect_3_M00_AXI 1 5 1 1590 450n
preplace netloc smartconnect_4_M00_AXI 1 5 1 1630 470n
preplace netloc smartconnect_5_M00_AXI 1 5 1 1690 490n
preplace netloc smartconnect_6_M00_AXI 1 5 1 1700 510n
preplace netloc smartconnect_7_M00_AXI 1 5 1 1620 530n
levelinfo -pg 1 -50 150 420 700 1070 1420 1920 2360 2560
pagesize -pg 1 -db -bbox -sgen -470 -550 2560 1610
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()

cr_bd_design_1 ""
set_property GENERATE_SYNTH_CHECKPOINT "0" [get_files design_1.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse [list design_1.bd]] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/proj_u50_hbm/proj_u50_hbm.gen/sources_1/bd/design_1/hdl/design_1_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse [list design_1.bd]] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xcu50-fsvh2104-2-e  -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xcu50-fsvh2104-2-e" -objects $obj
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xcu50-fsvh2104-2-e  -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  #set_property flow "Vivado Implementation 2024" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xcu50-fsvh2104-2-e" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1

#source ./scripts/compile_lib.tcl


set_property compxlib.questa_compiled_library_dir [file normalize {./compile_simlib/questa}] [current_project]
set_property -name {questa.simulate.vsim.more_options} -value {-onfinish final +notimingchecks} -objects [get_filesets sim_1]
set_property -name {questa.compile.vlog.more_options} -value {+notimingchecks} -objects [get_filesets sim_1]
launch_simulation
